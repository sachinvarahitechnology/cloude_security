import type { BrowserCapabilities } from '@serenity-js/web';
import { BrowsingSession } from '@serenity-js/web';
import type * as protractor from 'protractor';
import { ProtractorPage } from '../models';
/**
 * Protractor-specific implementation of {@apilink BrowsingSession}.
 *
 * @group Models
 */
export declare class ProtractorBrowsingSession extends BrowsingSession<ProtractorPage> {
    protected readonly browser: protractor.ProtractorBrowser;
    constructor(browser: protractor.ProtractorBrowser);
    allPages(): Promise<Array<ProtractorPage>>;
    /**
     * @param page
     */
    changeCurrentPageTo(page: ProtractorPage): Promise<void>;
    private activeWindowHandle;
    currentPage(): Promise<ProtractorPage>;
    protected registerCurrentPage(): Promise<ProtractorPage>;
    browserCapabilities(): Promise<BrowserCapabilities>;
}
//# sourceMappingURL=ProtractorBrowsingSession.d.ts.map